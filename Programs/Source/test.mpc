from random import randint

from Compiler import program
from Compiler.types import *
from Compiler.library import for_range, print_ln

log2q = 12
log2p = 8
n = 20
m = n * log2q
print(f"m={m}, q=2^{log2q}, p=2^{log2p}")

def crand() -> cint:
    r = randint(0, 2**log2q-1)
    return cint(r)

def srand() -> sint:
    return sint.get_random_int(log2q)

# Key generation
a = cint.Matrix(m, m)
for i in range(m):
    for j in range(m):
        a[i][j] = crand()

k = sint.Array(m)
for i in range(m):
    k[i] = srand()

# Evaluation
b = a * k

l = program.bit_length // log2p

for i in range(l):
    b[i] = b[i].mod2m(log2q)
    b[i] = b[i].right_shift(log2q - log2p)

r = sum(2**(i*log2p) * b[i] for i in range(l))

print_ln("r = %s", r.reveal())

